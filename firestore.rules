rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Allow users to read and write their own profile
    match /users/{userId} {
      allow read: if true; // Allow reading user profiles for login/registration
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Allow checking username availability and creating username mappings
    match /usernames/{username} {
      allow read: if true; // Allow anyone to read usernames for login/registration
      allow create: if isAuthenticated() && 
                   request.resource.data.uid == request.auth.uid; // Ensure users can only create usernames for themselves
      allow update: if false; // Usernames should not be updated once created
      allow delete: if false; // Usernames should not be deleted directly
    }

    // Allow users to read and write their own call logs
    match /callLogs/{logId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }

    // Allow users to read and write their own minutes wallet
    match /minutesWallets/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
  }
}